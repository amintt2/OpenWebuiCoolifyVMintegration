version: '3.8'

# Production deployment note:
# This docker-compose file uses environment variables from the .env file
# Make sure to create a .env file based on .env.example before deployment
# Never commit your actual .env file to version control

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - REPO_URL=${REPO_URL:-https://github.com/open-webui/open-webui.git}
        - REPO_BRANCH=${REPO_BRANCH:-main}
    container_name: openwebui-backend
    restart: unless-stopped
    environment:
      - VM_PORT=${VM_PORT:-8080}
      - WORKSPACE_DIR=${WORKSPACE_DIR:-/workspace}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_TIMEOUT=${API_TIMEOUT:-300}
      - ENABLE_AUTH=${ENABLE_AUTH:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PUBLIC_URL=${PUBLIC_URL:-http://localhost:8080}
      - THEME=${THEME:-light}
      - CUSTOM_BUILD_COMMAND=${CUSTOM_BUILD_COMMAND:-docker compose build}
      - CUSTOM_START_COMMAND=${CUSTOM_START_COMMAND:-docker compose up -d}
    ports:
      - "${VM_PORT}:${VM_PORT}"  # Local port for the backend API
    volumes:
      - workspace_data:${WORKSPACE_DIR}
    networks:
      - openwebui_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${COOLIFY_HEALTHCHECK_PORT:-8080}${COOLIFY_HEALTHCHECK_PATH:-/api/v1/health}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-2g}
          cpus: ${CPU_LIMIT:-2}
    labels:
      coolify.managed: "true"
      coolify.version: "1"
      coolify.type: "app"
      coolify.name: "OpenWebUI Backend"
      coolify.description: "Ubuntu VM environment for OpenWebUI"
      coolify.deployment.strategy: "rolling"
      coolify.healthcheck: "true"
      coolify.healthcheck.path: "${COOLIFY_HEALTHCHECK_PATH}"
      coolify.healthcheck.port: "${COOLIFY_HEALTHCHECK_PORT}"
      coolify.logs: "true"
      coolify.publicUrl: "${PUBLIC_URL}"

networks:
  openwebui_network:
    name: openwebui_network
    driver: bridge

volumes:
  workspace_data:
    name: openwebui_workspace